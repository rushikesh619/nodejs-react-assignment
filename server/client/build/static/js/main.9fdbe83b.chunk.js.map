{"version":3,"sources":["page/home.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","columns","title","field","editComponent","value","onRowDataChange","rowData","Select","onChange","event","secondPerson","target","state","dataSource","map","e","MenuItem","subCategoriesName","_id","relation","categorieName","getInitialData","axios","get","then","res","data","result","console","log","setState","catch","err","this","Container","maxWidth","Typography","variant","align","gutterBottom","Link","href","editable","onRowAdd","newData","Promise","resolve","reject","temp","firstPerson","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice","React","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fdbe83b.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport MeterialTable from 'material-table';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Container, Link, Button, TextField, Select, MenuItem, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails } from '@material-ui/core/'\nimport './home.css';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataSource: [],\n    };\n  }\n\n  columns = [\n    {\n      title: 'Products',\n      field: 'productName',\n    },\n    {\n      title: 'Sub Category',\n      field: 'subCategoriesName',\n      editComponent: ({ value, onRowDataChange, rowData }) => (\n        <Select\n          value={value}\n          onChange={(event) => {\n            onRowDataChange({\n              ...rowData,\n              secondPerson: (event.target.value) ?? \"\",\n            });\n          }}\n        >\n          {this.state.dataSource?.map((e) => (\n            <MenuItem key={e._id} value={e.subCategoriesName}>\n              {e.subCategoriesName}\n            </MenuItem>\n          ))}\n        </Select>\n      ),\n    },\n    {\n      title: 'Category', field: 'categorieName',\n      editComponent: ({ value, onRowDataChange, rowData }) => (\n        <Select\n          value={value}\n          onChange={(event) => {\n            onRowDataChange({\n              ...rowData,\n              relation: (event.target.value) ?? \"\",\n            });\n          }}\n        >\n          {this.state.dataSource?.map((e) => (\n            <MenuItem key={e._id} value={e.categorieName}>\n              {e.categorieName}\n            </MenuItem>\n          ))}\n        </Select>\n      ),\n    }\n  ]\n\n  componentDidMount(){\n    this.getInitialData();\n  }\n\n  getInitialData=()=>{\n    axios.get('/api/products/getAllProducts').then((res)=>{\n      if(res.data.result){\n        console.log(res.data.result)\n        this.setState({\n          dataSource:res.data.result,\n        })\n      }else{\n        console.log(\"can't get initial data\")\n      }\n    }).catch(err=>{\n      console.log(err);\n    })\n  }\n\n  render() {\n    return (\n      <div>\n      <Container maxWidth='md'>\n        <Typography variant=\"h4\" align='center' gutterBottom >\n          To demonstrate the usage of material table, UI and rest-api\n        </Typography>\n        <Typography variant=\"h5\" align='center' gutterBottom >\n          Developers Info :-\n          <Link href=\"http://rushikesh619.github.io/\" >\n            http://rushikesh619.github.io/\n          </Link>\n        </Typography>\n      </Container>\n      <Container maxWidth='md'>\n        <MeterialTable\n          title='Products Table'\n          data={this.state.dataSource}\n          columns={this.columns}\n          editable={{\n            onRowAdd: newData =>\n              new Promise((resolve, reject) => {\n                console.log(newData);\n                const temp = {\n                  firstPerson: newData.firstPerson,\n                  relation: newData.relation,\n                  secondPerson: newData.secondPerson\n                }\n                setTimeout(() => {\n                  this.setState({dataSource:[...this.state.dataSource, temp]});\n\n                  resolve();\n                }, 1000)\n              }),\n            onRowUpdate: (newData, oldData) =>\n              new Promise((resolve, reject) => {\n                setTimeout(() => {\n                  const dataUpdate = [...this.state.dataSource];\n                  const index = oldData.tableData.id;\n                  const temp = {\n                    firstPerson: newData.firstPerson,\n                    relation: newData.relation,\n                    secondPerson: newData.secondPerson\n                  }\n                  dataUpdate[index] = temp;\n                  this.setState({dataSource:[...dataUpdate]});\n\n                  resolve();\n                }, 1000)\n              }),\n            onRowDelete: oldData =>\n              new Promise((resolve, reject) => {\n                setTimeout(() => {\n                  const dataDelete = [...this.state.dataSource];\n                  const index = oldData.tableData.id;\n                  dataDelete.splice(index, 1);\n                  this.setState({dataSource:[...dataDelete]});\n\n                  resolve()\n                }, 1000)\n              }),\n          }}\n        />\n      </Container>\n    </div>\n    );\n  }\n}\n\nexport default Home\n","import './App.css';\nimport Home from './page/home'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}